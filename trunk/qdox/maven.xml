<?xml version="1.0"?>
<project xmlns:deploy="deploy" xmlns:j="jelly:core" xmlns:maven="jelly:maven">

	<!-- Generate lexer and parser java source code from grammars -->
	<preGoal name="java:compile">
	
		<!-- Generate lexer -->
		<uptodate property="lexer.uptodate" srcfile="src/grammar/lexer.flex" targetfile="target/src/java/com/thoughtworks/qdox/parser/impl/JFlexLexer.java"/>
		<j:set var="lexerUptodate" value="${lexer.uptodate}"/>
		<j:if test="${lexerUptodate == null}">
			<mkdir dir="target/src/java/com/thoughtworks/qdox/parser/impl"/>
			<java classpath="bootstrap/jflex.jar" classname="JFlex.Main" fork="yes">
				<arg value="-d"/>
				<arg value="target/src/java/com/thoughtworks/qdox/parser/impl"/>
				<arg value="src/grammar/lexer.flex"/>
			</java>
		</j:if>

		<!-- Generete parser -->
		<uptodate property="parser.uptodate" srcfile="src/grammar/parser.y" targetfile="target/src/java/com/thoughtworks/qdox/parser/impl/Parser.java"/>
		<j:set var="parserUptodate" value="${parser.uptodate}"/>
		<j:if test="${parserUptodate == null}">
			<exec executable="${yacc.exe}" dir="target">
				<arg value="-Jnorun"/>
				<arg value="-Jnoconstruct"/>
				<arg value="-Jclass=Parser"/>
				<arg value="-Jsemantic=Value"/>
				<arg value="-Jpackage=com.thoughtworks.qdox.parser.impl"/>
				<arg value="../src/grammar/parser.y"/>
			</exec>
			<move todir="target/src/java/com/thoughtworks/qdox/parser/impl" file="target/Parser.java"/>
		</j:if>
	
		<!-- Add lexer and parser to compilation path -->
		<path id="generate.java" location="target/src/java"/>
		<maven:addPath id="maven.compile.src.set" refid="generate.java"/>
		
	</preGoal>

	<!-- Generate mock objects using mockmaker for tests -->		
	<preGoal name="test:compile">
		
		<!-- Generate mockobjects -->
		<taskdef name="mockmaker" classname="mockmaker.AntTask">
			<classpath>
				<fileset dir="bootstrap"/>
			</classpath>
		</taskdef>
		<mkdir dir="target/src/test"/>
		<mockmaker srcdir="src/java" destdir="target/src/test"/>	
		
		<!-- Merge all test code (src + mockobjects) into one dir as test:compile goal
		     can only handle one dir. -->
		<copy todir="target/src/test">
			<fileset dir="src/test"/>
		</copy>

		<!-- Kludge to get around problem with first build attempt -->		
		<j:set scope="parent" var="unitTestSourcesPresent" value="true"/>
	</preGoal>

	<!-- Ensure clover coverage report and PDF documentation generated on site -->
	<preGoal name="xdoc:generate-from-pom">
		<attainGoal name="clover"/>
		<attainGoal name="pdf"/>
	</preGoal>
	
	<!-- Ensure java recompiled with clover compiler -->
	<preGoal name="clover">
		<delete dir="${maven.build.dest}"/>
	</preGoal>
	
	<!-- Get rid of cloverified classes -->
	<postGoal name="clover">
		<delete dir="${maven.build.dest}"/>
	</postGoal>
	
</project>

