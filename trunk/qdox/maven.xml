<?xml version="1.0"?>
<project default="jar" xmlns:j="jelly:core" xmlns:maven="jelly:maven">

  <!-- Generate lexer and parser java source code from grammars -->
  <goal name="parser" description="Generate parser">

    <!-- Generate lexer -->
    <uptodate property="lexer.uptodate" srcfile="src/grammar/lexer.flex" targetfile="target/src/java/com/thoughtworks/qdox/parser/impl/JFlexLexer.java"/>
    <j:set var="lexerUptodate" value="${lexer.uptodate}"/>
    <j:if test="${lexerUptodate == null}">
      <mkdir dir="target/src/java/com/thoughtworks/qdox/parser/impl"/>
      <java classpath="bootstrap/jflex.jar" classname="JFlex.Main" fork="yes">
        <arg value="-d"/>
        <arg value="target/src/java/com/thoughtworks/qdox/parser/impl"/>
        <arg value="src/grammar/lexer.flex"/>
      </java>
    </j:if>

    <!-- Generete parser -->
    <uptodate property="parser.uptodate" srcfile="src/grammar/parser.y" targetfile="target/src/java/com/thoughtworks/qdox/parser/impl/Parser.java"/>
    <j:set var="parserUptodate" value="${parser.uptodate}"/>
    <j:if test="${parserUptodate == null}">
      <j:set var="os">${os.name}</j:set>
      <j:choose>
        <j:when test="${os.startsWith('Windows')}">
          <property name="qdox.byaccj.executable" 
                    value="${basedir}/bootstrap/yacc.exe" />
        </j:when>
        <j:when test="${os.startsWith('Linux')}">
          <property name="qdox.byaccj.executable" 
                    value="${basedir}/bootstrap/yacc.linux" />
        </j:when>
        <j:when test="${os.startsWith('SunOS')}">
          <property name="qdox.byaccj.executable" 
                    value="${basedir}/bootstrap/yacc.solaris" />
        </j:when>
        <j:when test="${os.startsWith('Mac OS X')}">
          <property name="qdox.byaccj.executable" 
                    value="${basedir}/bootstrap/yacc.macosx" />
        </j:when>
        <j:otherwise>
          <property name="qdox.byaccj.executable" 
                    value="byaccj" />
          <echo>Note: The next step may fail if BYacc/J cannot be located.  If so, </echo>
          <echo>please edit ~/build.properties and set the qdox.byaccj.executable</echo>
          <echo>property to point to the BYacc/J binary.</echo>
        </j:otherwise>
      </j:choose>
      <echo>(Using byaccj = ${qdox.byaccj.executable})</echo>
      <exec executable="${qdox.byaccj.executable}" dir="target" failonerror="true">
        <arg value="-v"/>
        <arg value="-Jnorun"/>
        <arg value="-Jnoconstruct"/>
        <arg value="-Jclass=Parser"/>
        <arg value="-Jsemantic=Value"/>
        <arg value="-Jpackage=com.thoughtworks.qdox.parser.impl"/>
        <arg value="../src/grammar/parser.y"/>
      </exec>
      <move todir="target/src/java/com/thoughtworks/qdox/parser/impl" file="target/Parser.java"/>
      <move tofile="target/yacc-states.txt" file="target/y"/> <!-- rename states file to something obvious -->
    </j:if>
  
    <!-- Add lexer and parser to compilation path -->
    <path id="generate.java" location="${basedir}/target/src/java"/>
    <maven:addPath id="maven.compile.src.set" refid="generate.java"/>
    
  </goal>
  
  <preGoal name="java:compile">
    <attainGoal name="parser"/>
  </preGoal>
  
  <preGoal name=" ">
    <attainGoal name="parser"/>
  </preGoal>
</project>

